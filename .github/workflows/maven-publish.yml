# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: CI Pipeline - Maven Package

on:
  push:
    branches: [ "main" ]
    # paths:
    #   - ./
jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Build with Maven
      env:
        AWS_AK_VAL: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SK_VAL: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_ACC_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        AWS_REG: ${{ vars.AWS_REGION }}
      working-directory: ./aws_cloud/lambda-dynamodb-func-java-sdk
      # run: mvn -B package --file pom.xml
      run: |
        export AWS_AK=$AWS_AK_VAL
        export AWS_SK=$AWS_SK_VAL
        export AWS_DEFAULT_REGION_VALUE=$AWS_REG
        export AWS_ACCOUNT_ID=$AWS_ACC_ID
        mvn clean install

    - name: Upload Artifact to the S3 Storage
      working-directory: ./aws_cloud/lambda-dynamodb-func-java-sdk
      # run: mvn -B package --file pom.xml
      run: |
        ls -la
        cd target
        ls -la
        pwd
        aws configure list
        aws s3 ls
        aws s3 mv demo-1.0.0.jar s3://my-bucket-ghb/demo-1.0.0.jar

    # - name: Publish to GitHub Packages Apache Maven
    #   run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
    #   env:
    #     GITHUB_TOKEN: ${{ github.token }}
